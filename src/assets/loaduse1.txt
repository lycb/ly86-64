                            |         DESCRIPTION:
                            |         loaduse.yo demonstrates a load use hazard.
                            |         
                            |         In this particular example, there are multiple
                            |         stalls and bubbles to delay the execution of an 
                            |         instruction until an operand has been read from memory.  
                            |         For example, the load use hazard between the MRMOVQ 
                            |         instruction at address 0x015 and the RRMOVQ instruction at 
                            |         address 0x01f, will cause the F register to
                            |         be stalled so that it fetches the MRMOVQ at address 0x021 twice, 
                            |         the D register to be stalled so that it decodes RRMOVQ twice, 
                            |         and the E register to be bubbled.
                            |         
0x000:                      |        .pos 0x0
0x000: 10                   |        nop
0x001: 30f44800000000000000 |        irmovq stack, %rsp
0x00b: 30f03800000000000000 |        irmovq num, %rax
0x015: 50100000000000000000 |        mrmovq (%rax), %rcx  # hardware should insert a bubble
0x01f: 2012                 |        rrmovq %rcx, %rdx    # %rcx needs to be updated from memory
0x021: 50300800000000000000 |        mrmovq 8(%rax), %rbx # hardware should insert a bubble
0x02b: 2036                 |        rrmovq %rbx, %rsi    # %rbx needs to be updated from memory
0x02d: b07f                 |        popq %rdi            # hardware should insert a bubble
0x02f: 2078                 |        rrmovq %rdi, %r8     # %rdi needs to be updated from memory
0x031: b09f                 |        popq %r9             # hardware should insert a bubble
0x033: 209a                 |        rrmovq %r9, %r10     # %r9, %r10 should be 4 
0x035: 00                   |        halt
0x038:                      |        .align 8
0x038: 0100000000000000     | num:   .quad 1
0x040: 0200000000000000     |        .quad 2
0x048: 0300000000000000     | stack: .quad 3
0x050: 0400000000000000     |        .quad 4
